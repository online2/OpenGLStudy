数据类型
    GLSL中的数据类型主要分为标量、向量、矩阵、采样器、结构体、数组、空类型七种类型：

    标量：
        标量表示的是只有大小没有方向的量，在GLSL中标量只有bool、int和float三种。
        对于int，和C一样，可以写为十进制（16）、八进制（020）或者十六进制（0x10）。关于进制不了解的，得自己补补，这是编程基础。
        对于标量的运算，我们最需要注意的是精度，防止溢出问题。
    向量：
        向量我们可以看做是数组，在GLSL通常用于储存颜色、坐标等数据，针对维数，可分为二维、三维和四位向量。
        针对存储的标量类型，可以分为：
            bool、int和float。共有vec2、vec3、vec4，ivec2、ivec3、ivec4、bvec2、bvec3和bvec4九种类型，
        数字代表维数、i表示int类型、b表示bool类型。需要注意的是，GLSL中的向量表示竖向量，所以与矩阵相乘进行变换时，矩阵在前，向量在后（与DirectX正好相反）
        。向量在GPU中由硬件支持运算，比CPU快的多。

        作为颜色向量时:
            用rgba表示分量，就如同取数组的中具体数据的索引值。三维颜色向量就用rgb表示分量
            。比如对于颜色向量vec4 color，color[0]和color.r都表示color向量的第一个值，也就是红色的分量。其他相同。
        作为位置向量时:
            用xyzw表示分量，xyz分别表示xyz坐标，w表示向量的模。三维坐标向量为xyz表示分量，二维向量为xy表示分量。
        作为纹理向量时:
            用stpq表示分量，三维用stp表示分量，二维用st表示分量。
    矩阵：
        在GLSL中矩阵拥有2*2、3*3、4*4三种类型的矩阵，分别用mat2、mat3、mat4表示。
        我们可以把矩阵看做是一个二维数组，也可以用二维数组下表的方式取里面具体位置的值。
    采样器：
        采样器是专门用来对纹理进行采样工作的，在GLSL中一般来说，一个采样器变量表示一副或者一套纹理贴图。所谓的纹理贴图可以理解为我们看到的物体上的皮肤。
    结构体：
        和C语言中的结构体相同，用struct来定义结构体，关于结构体参考C语言中的结构体。
    数组：
        数组知识也和C中相同，不同的是数组声明时可以不指定大小，但是建议在不必要的情况下，还是指定大小的好。
    空类型：
        空类型用void表示，仅用来声明不返回任何值得函数。

        变量声明示例：
            float a=1.0;
            int b=1;
            bool c=true;
            vec2 d=vec2(1.0,2.0);
            vec3 e=vec3(1.0,2.0,3.0)
            vec4 f=vec4(vec3,1.2);
            vec4 g=vec4(0.2);  //相当于vec(0.2,0.2,0.2,0.2)
            vec4 h=vec4(a,a,1.3,a);
            mat2 i=mat2(0.1,0.5,1.2,2.4);
            mat2 j=mat2(0.8);   //相当于mat2(0.8,0.8,0.8,0.8)
            mat3 k=mat3(e,e,1.2,1.6,1.8)

限定符
    在之前的博客中也提到了，GLSL中的限定符号主要有：

        attritude：一般用于各个顶点各不相同的量。如顶点颜色、坐标等。
        uniform：一般用于对于3D物体中所有顶点都相同的量。比如光源位置，统一变换矩阵等。
        varying：表示易变量，一般用于顶点着色器传递到片元着色器的量。
        const：常量。

浮点精度
    与顶点着色器不同的是，在片元着色器中使用浮点型时，必须指定浮点类型的精度，否则编译会报错。精度有三种，分别为：

    lowp：低精度。8位。
    mediump：中精度。10位。
    highp：高精度。16位。

    uniform lowp float a=1.0;
    varying mediump vec4 c;

顶点着色器的内建变量
    输入变量：
        gl_Position：顶点坐标
        gl_PointSize：点的大小，没有赋值则为默认值1，通常设置绘图为点绘制才有意义。
片元着色器的内建变量
    输入变量
        gl_FragCoord：当前片元相对窗口位置所处的坐标。
        gl_FragFacing：bool型，表示是否为属于光栅化生成此片元的对应图元的正面。
    输出变量
        gl_FragColor：当前片元颜色
        gl_FragData：vec4类型的数组。向其写入的信息，供渲染管线的后继过程使用。


 详细：https://blog.csdn.net/junzia/article/details/52830604

